# compose.yaml - 
version: "3.9"

name: online_mart

#===============================================================================================

services:

  users:
    build:
      context: ./user_service
      dockerfile: Dockerfile
    container_name: user_container
    ports:
      - "8081:8000"  # Expose host port 8009 to container port 8000 
    depends_on:
        - postgres_db 
        - kafka  
    volumes:
      - ./user_service:/code   

  #===============================================================================================
  
  product:
    build:
      context: ./product_service
      dockerfile: Dockerfile
    container_name: product_container
    ports:
      - "8082:8000"  # Expose host port 8008 to container port 8000 
    depends_on:
        - postgres_db   
    volumes:
      - ./product_service:/code 

  
  #===============================================================================================
  
  order:
    build:
      context: ./order_service
      dockerfile: Dockerfile
    container_name: order_container
    ports:
      - "8083:8000"  # Expose host port 8006 to container port 8000 
    depends_on:
        - postgres_db  
        - kafka
        # - broker
    volumes:
      - ./order_service:/code 
        

  #===============================================================================================
  
  inventory:
    build:
      context: ./inventory_service
      dockerfile: Dockerfile
    container_name: inventory_container
    ports:
      - "8084:8000"  # Expose host port 8007 to container port 8000 
    depends_on:
        - postgres_db   
    volumes:
      - ./inventory_service:/code 

  #===============================================================================================
  
  payment:
    build:
      context: ./payment_service
      dockerfile: Dockerfile
    container_name: payment_container
    ports:
      - "8085:8000"  # Expose host port 8007 to container port 8000 
    depends_on:
        - postgres_db   
    volumes:
      - ./payment_service:/code 

    #===============================================================================================
  
  notification:
    build:
      context: ./notification_service
      dockerfile: Dockerfile
    container_name: notification_container
    ports:
      - "8086:8000"  # Expose host port 8007 to container port 8000 
    depends_on:
        - postgres_db   
    volumes:
      - ./notification_service:/code 
    


  #===============================================================================================
  
  # ## pg Admin

  # postgres_db:
  #   image: postgres:latest  # Use the official PostgreSQL image
  #   restart: always
  #   container_name: PostgresCont
  #   environment:
  #       - POSTGRES_USER=ziakhan
  #       - POSTGRES_PASSWORD=my_password
  #       - POSTGRES_DB=mydatabase
  #   ports:
  #       - '5432:5432'
  #   volumes:
  #       - postgres_db:/var/lib/postgresql/data
 

  #===============================================================================================

  ## neon

  postgres_db:
    image: postgres:latest  # Use the official PostgreSQL image
    restart: always
    container_name: PostgresCont
    environment:
        - POSTGRES_USER=neondb_owner
        - POSTGRES_PASSWORD=WC94rhZSjwUe
        - POSTGRES_DB=online_mart_project
    ports:
        - '5432:5432'
    volumes:
        - postgres_db:/var/lib/postgresql/data
 
#===============================================================================================

  kafka:
    image: apache/kafka:3.7.0
    hostname: broker
    container_name: KafkaContainer
    ports:
      - '9092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'


#===============================================================================================
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: 'Local Kafka Cluster'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'broker:19092'
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - kafka
#===============================================================================================

volumes:
  postgres_db:
    driver: local

#===============================================================================================

networks:
  default:
    driver: bridge

#===============================================================================================




